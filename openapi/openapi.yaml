openapi: 3.0.2
servers:
  - url: /
info:
  description: |-
    This is a sample Pet Shelter Server based on the OpenAPI 3.0 specification. 
    It is based on [the Pet Store sample](https://github.com/swagger-api/swagger-petstore) provided by Swagger Team.
    It is proposed as an exercise for a Go course about APIs.
    Find out more about Swagger: [https://swagger.io](https://swagger.io)
  version: 1.0.0
  title: Swagger Pet Shelter - OpenAPI 3.0
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
tags:
  - name: pet
    description: Everything about your Pets
paths:
  /pet:
    get:
      tags:
        - pet
      summary: Lists Pets
      description: ""
      operationId: listPets
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Pet"
    post:
      tags:
        - pet
      summary: Add a new pet to the shelter
      description: Add a new pet to the shelter
      operationId: addPet
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
        "405":
          description: Invalid input
      requestBody:
        description: Create a new pet in the store
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pet"
  /pet/findByCategories:
    get:
      tags:
        - pet
      summary: Finds Pets by categories
      description: Multiple categories values can be provided with comma separated strings
      operationId: findPetsByCategories
      parameters:
        - name: categories
          in: query
          description: Categories values that need to be considered for filter
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Pet"
        "400":
          description: Invalid categories value
  "/pet/{petId}":
    get:
      tags:
        - pet
      summary: Find pet by ID
      description: Returns a single pet
      operationId: getPetById
      parameters:
        - name: petId
          in: path
          description: ID of pet to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/Pet"
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
        "400":
          description: Invalid ID supplied
        "404":
          description: Pet not found
    put:
      tags:
        - pet
      summary: Update an existing pet
      description: Update an existing pet by Id
      operationId: updatePet
      parameters:
        - name: petId
          in: path
          description: ID of pet to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
        "400":
          description: Invalid ID supplied
        "404":
          description: Pet not found
        "405":
          description: Validation exception
      requestBody:
        description: Update an existent pet in the store
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pet"
    delete:
      tags:
        - pet
      summary: Deletes a pet
      description: ""
      operationId: deletePet
      parameters:
        - name: petId
          in: path
          description: Pet id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "400":
          description: Invalid pet value
components:
  schemas:
    Pet:
      x-swagger-router-model: io.swagger.petstore.model.Pet
      required:
        - name
        - category
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Rafale
        category:
          type: string
          example: Dog
      type: object
    ApiResponse:
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      type: object
  requestBodies:
    Pet:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Pet"
      description: Pet object that needs to be added to the shelter
